From 4cc0b4bdd31104fac7aa33a3dd0968e702f380b4 Mon Sep 17 00:00:00 2001
From: Tony Fischetti <tony.fischetti@gmail.com>
Date: Wed, 5 Feb 2020 17:13:43 -0500
Subject: [PATCH] apply initial patch

---
 block/elevator.c                       | 6 +++---
 include/uapi/linux/input-event-codes.h | 6 ++++--
 kernel/sched/core.c                    | 6 +++---
 3 files changed, 10 insertions(+), 8 deletions(-)

diff --git a/block/elevator.c b/block/elevator.c
index 4eab3d70e880..1d7b89bbb47c 100644
--- a/block/elevator.c
+++ b/block/elevator.c
@@ -623,15 +623,15 @@ static inline bool elv_support_iosched(struct request_queue *q)
 }
 
 /*
- * For single queue devices, default to using mq-deadline. If we have multiple
- * queues or mq-deadline is not available, default to "none".
+ * For single queue devices, default to using bfq, If we have multiple
+ * queues or bfq is not available, default to "none".
  */
 static struct elevator_type *elevator_get_default(struct request_queue *q)
 {
 	if (q->nr_hw_queues != 1)
 		return NULL;
 
-	return elevator_get(q, "mq-deadline", false);
+	return elevator_get(q, "bfq", false);
 }
 
 /*
diff --git a/include/uapi/linux/input-event-codes.h b/include/uapi/linux/input-event-codes.h
index 0f1db1cccc3f..0255c6c4e8c8 100644
--- a/include/uapi/linux/input-event-codes.h
+++ b/include/uapi/linux/input-event-codes.h
@@ -139,7 +139,8 @@
 #define KEY_F6			64
 #define KEY_F7			65
 #define KEY_F8			66
-#define KEY_F9			67
+// F9 is the new sysreq
+#define KEY_F9			99
 #define KEY_F10			68
 #define KEY_NUMLOCK		69
 #define KEY_SCROLLLOCK		70
@@ -171,7 +172,8 @@
 #define KEY_KPENTER		96
 #define KEY_RIGHTCTRL		97
 #define KEY_KPSLASH		98
-#define KEY_SYSRQ		99
+// sysrq is the new F9
+#define KEY_SYSRQ		67
 #define KEY_RIGHTALT		100
 #define KEY_LINEFEED		101
 #define KEY_HOME		102
diff --git a/kernel/sched/core.c b/kernel/sched/core.c
index 90e4b00ace89..80de5173f276 100644
--- a/kernel/sched/core.c
+++ b/kernel/sched/core.c
@@ -57,7 +57,7 @@ const_debug unsigned int sysctl_sched_features =
  * Number of tasks to iterate in a single balance run.
  * Limited because this is done with IRQs disabled.
  */
-const_debug unsigned int sysctl_sched_nr_migrate = 32;
+const_debug unsigned int sysctl_sched_nr_migrate = 128;
 
 /*
  * period over which we measure -rt task CPU usage in us.
@@ -69,9 +69,9 @@ __read_mostly int scheduler_running;
 
 /*
  * part of the period that we allow rt tasks to run in us.
- * default: 0.95s
+ * default: 0.98s
  */
-int sysctl_sched_rt_runtime = 950000;
+int sysctl_sched_rt_runtime = 980000;
 
 /*
  * __task_rq_lock - lock the rq @p resides on.
-- 
2.20.1

